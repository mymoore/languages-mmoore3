Prog "simpsontree" ["Data.List","Prelude"] [Type ("simpsontree","Person") Public [] [Cons ("simpsontree","Clancy_Bouvier") 0 Public [],Cons ("simpsontree","Jacqueline_Ingrid_Bouvier") 0 Public [],Cons ("simpsontree","Patty_Bouvier") 0 Public [],Cons ("simpsontree","Selma_Bouvier") 0 Public [],Cons ("simpsontree","Marjorie_Jacqueline_Simpson") 0 Public [],Cons ("simpsontree","Homer_Jay_Simpson") 0 Public [],Cons ("simpsontree","Bartholomew_Jojo_Simpson") 0 Public [],Cons ("simpsontree","Lisa_Marie_Simpson") 0 Public [],Cons ("simpsontree","Maggie_Simpson") 0 Public [],Cons ("simpsontree","Mona_Simpson") 0 Public [],Cons ("simpsontree","Abraham_Simpson_II") 0 Public [],Cons ("simpsontree","Herbert_Herb_Powell") 0 Public [],Cons ("simpsontree","Abbey_Simpson") 0 Public []],Type ("simpsontree","Gender") Public [] [Cons ("simpsontree","Male") 0 Public [],Cons ("simpsontree","Female") 0 Public []]] [Func ("simpsontree","_inst#Prelude.Data#simpsontree.Person#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#===#Prelude.Data#simpsontree.Person#") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","_impl#aValue#Prelude.Data#simpsontree.Person#") 0 Public (TCons ("simpsontree","Person") []) (Rule [] (Var 0)),Func ("simpsontree","_inst#Prelude.Data#simpsontree.Gender#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("simpsontree","Gender") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#===#Prelude.Data#simpsontree.Gender#") 2 Public (FuncType (TCons ("simpsontree","Gender") []) (FuncType (TCons ("simpsontree","Gender") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","_impl#aValue#Prelude.Data#simpsontree.Gender#") 0 Public (TCons ("simpsontree","Gender") []) (Rule [] (Var 0)),Func ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#==#Prelude.Eq#simpsontree.Person#") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Person#") 0 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","_inst#Prelude.Show#simpsontree.Person#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#show#Prelude.Show#simpsontree.Person#") 0 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#showsPrec#Prelude.Show#simpsontree.Person#") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [] (Var 0)),Func ("simpsontree","_impl#showList#Prelude.Show#simpsontree.Person#") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("simpsontree","_inst#Prelude.Show#simpsontree.Gender#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("simpsontree","Gender") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#show#Prelude.Show#simpsontree.Gender#") 0 Public (FuncType (TCons ("simpsontree","Gender") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#showsPrec#Prelude.Show#simpsontree.Gender#") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("simpsontree","Gender") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [] (Var 0)),Func ("simpsontree","_impl#showList#Prelude.Show#simpsontree.Gender#") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Gender") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("simpsontree","_inst#Prelude.Read#simpsontree.Gender#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Read") [TCons ("simpsontree","Gender") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda1") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda1._#lambda4") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda6") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda6._#lambda9") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("simpsontree","_impl#readList#Prelude.Read#simpsontree.Gender#") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("simpsontree","Gender") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("simpsontree","_inst#Prelude.Eq#simpsontree.Gender#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("simpsontree","Gender") []])) (Rule [] (Var 0)),Func ("simpsontree","_impl#==#Prelude.Eq#simpsontree.Gender#") 2 Public (FuncType (TCons ("simpsontree","Gender") []) (FuncType (TCons ("simpsontree","Gender") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Gender#") 0 Public (FuncType (TCons ("simpsontree","Gender") []) (FuncType (TCons ("simpsontree","Gender") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","genderFacts") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Gender") []]]) (Rule [] (Var 0)),Func ("simpsontree","parentFacts") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Person") []]]) (Rule [] (Var 0)),Func ("simpsontree","spouseFacts") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Person") []]]) (Rule [] (Var 0)),Func ("simpsontree","allPersons") 0 Public (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (Rule [] (Var 0)),Func ("simpsontree","parent") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","children") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","children._#lambda11") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [] (Var 0)),Func ("simpsontree","female") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("simpsontree","male") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("simpsontree","mother") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","father") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","sibling") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","sibling._#lambda12") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("simpsontree","siblingsInLaw") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","siblingsInLaw._#lambda13") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("simpsontree","siblingsInLaw._#lambda14") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("simpsontree","stepSibling") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","stepSibling._#lambda15") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("Prelude","Bool") []])))) (Rule [] (Var 0)),Func ("simpsontree","stepSibling._#lambda15._#lambda16") 4 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))))) (Rule [] (Var 0)),Func ("simpsontree","stepSibling._#lambda17") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("Prelude","Bool") []])))) (Rule [] (Var 0)),Func ("simpsontree","stepSibling._#lambda17._#lambda18") 4 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))))) (Rule [] (Var 0)),Func ("simpsontree","halfSibling") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","halfSibling._#lambda19") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [] (Var 0)),Func ("simpsontree","grandparent") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","spouse") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","ancestor") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","ancestor._#lambda20") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","aunt_or_uncle") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("simpsontree","lookupGender") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Maybe") [TCons ("simpsontree","Gender") []])) (Rule [] (Var 0)),Func ("simpsontree","parentsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","parentsOf._#lambda21") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [] (Var 0)),Func ("simpsontree","spousesOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","spousesOf._#lambda24") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Person") []]) (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])))) (Rule [] (Var 0)),Func ("simpsontree","spousesOf._#lambda28") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Person") []]) (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])))) (Rule [] (Var 0)),Func ("simpsontree","mothersOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","mothersOf._#lambda30") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","fathersOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","fathersOf._#lambda31") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","siblingsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","siblingsOf._#lambda32") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [] (Var 0)),Func ("simpsontree","siblingsInLawOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","siblingsInLawOf._#lambda33") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [] (Var 0)),Func ("simpsontree","stepSiblingsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","stepSiblingsOf._#lambda34") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [] (Var 0)),Func ("simpsontree","halfSiblingsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","halfSiblingsOf._#lambda35") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [] (Var 0)),Func ("simpsontree","grandparentsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","grandparentsOf._#lambda36") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [] (Var 0)),Func ("simpsontree","auntsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","auntsOf._#lambda37") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","auntsOf._#lambda37._#lambda38") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","unclesOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","unclesOf._#lambda39") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0)),Func ("simpsontree","unclesOf._#lambda39._#lambda40") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [] (Var 0))] []