Prog "simpsontree" ["Data.List","Prelude"] [Type ("simpsontree","Person") Public [] [Cons ("simpsontree","Clancy_Bouvier") 0 Public [],Cons ("simpsontree","Jacqueline_Ingrid_Bouvier") 0 Public [],Cons ("simpsontree","Patty_Bouvier") 0 Public [],Cons ("simpsontree","Selma_Bouvier") 0 Public [],Cons ("simpsontree","Marjorie_Jacqueline_Simpson") 0 Public [],Cons ("simpsontree","Homer_Jay_Simpson") 0 Public [],Cons ("simpsontree","Bartholomew_Jojo_Simpson") 0 Public [],Cons ("simpsontree","Lisa_Marie_Simpson") 0 Public [],Cons ("simpsontree","Maggie_Simpson") 0 Public [],Cons ("simpsontree","Mona_Simpson") 0 Public [],Cons ("simpsontree","Abraham_Simpson_II") 0 Public [],Cons ("simpsontree","Herbert_Herb_Powell") 0 Public [],Cons ("simpsontree","Abbey_Simpson") 0 Public []],Type ("simpsontree","Gender") Public [] [Cons ("simpsontree","Male") 0 Public [],Cons ("simpsontree","Female") 0 Public []]] [Func ("simpsontree","_inst#Prelude.Data#simpsontree.Person#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("simpsontree","Person") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("simpsontree","_impl#===#Prelude.Data#simpsontree.Person#") [],Comb FuncCall ("simpsontree","_impl#aValue#Prelude.Data#simpsontree.Person#") []])])),Func ("simpsontree","_impl#===#Prelude.Data#simpsontree.Person#") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("simpsontree","_impl#aValue#Prelude.Data#simpsontree.Person#") 0 Public (TCons ("simpsontree","Person") []) (Rule [] (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Comb ConsCall ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("simpsontree","Jacqueline_Ingrid_Bouvier") [])) (Comb ConsCall ("simpsontree","Patty_Bouvier") [])) (Comb ConsCall ("simpsontree","Selma_Bouvier") [])) (Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") [])) (Comb ConsCall ("simpsontree","Homer_Jay_Simpson") [])) (Comb ConsCall ("simpsontree","Bartholomew_Jojo_Simpson") [])) (Comb ConsCall ("simpsontree","Lisa_Marie_Simpson") [])) (Comb ConsCall ("simpsontree","Maggie_Simpson") [])) (Comb ConsCall ("simpsontree","Mona_Simpson") [])) (Comb ConsCall ("simpsontree","Abraham_Simpson_II") [])) (Comb ConsCall ("simpsontree","Herbert_Herb_Powell") [])) (Comb ConsCall ("simpsontree","Abbey_Simpson") []))),Func ("simpsontree","_inst#Prelude.Data#simpsontree.Gender#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("simpsontree","Gender") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("simpsontree","_impl#===#Prelude.Data#simpsontree.Gender#") [],Comb FuncCall ("simpsontree","_impl#aValue#Prelude.Data#simpsontree.Gender#") []])])),Func ("simpsontree","_impl#===#Prelude.Data#simpsontree.Gender#") 2 Public (FuncType (TCons ("simpsontree","Gender") []) (FuncType (TCons ("simpsontree","Gender") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("simpsontree","Male") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Male") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Female") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Female") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Male") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Female") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("simpsontree","_impl#aValue#Prelude.Data#simpsontree.Gender#") 0 Public (TCons ("simpsontree","Gender") []) (Rule [] (Or (Comb ConsCall ("simpsontree","Male") []) (Comb ConsCall ("simpsontree","Female") []))),Func ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("simpsontree","Person") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("simpsontree","_impl#==#Prelude.Eq#simpsontree.Person#") [],Comb FuncCall ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Person#") []])])),Func ("simpsontree","_impl#==#Prelude.Eq#simpsontree.Person#") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Person#") 0 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") []])),Func ("simpsontree","_inst#Prelude.Show#simpsontree.Person#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("simpsontree","Person") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("simpsontree","_impl#show#Prelude.Show#simpsontree.Person#") [],Comb (FuncPartCall 2) ("simpsontree","_impl#showsPrec#Prelude.Show#simpsontree.Person#") [],Comb FuncCall ("simpsontree","_impl#showList#Prelude.Show#simpsontree.Person#") []])])),Func ("simpsontree","_impl#show#Prelude.Show#simpsontree.Person#") 0 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Show#simpsontree.Person#") []])),Func ("simpsontree","_impl#showsPrec#Prelude.Show#simpsontree.Person#") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Clancy_Bouvier") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'C'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude",":") [Lit (Charc 'c'),Comb ConsCall ("Prelude",":") [Lit (Charc 'y'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'u'),Comb ConsCall ("Prelude",":") [Lit (Charc 'v'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Jacqueline_Ingrid_Bouvier") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'J'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'c'),Comb ConsCall ("Prelude",":") [Lit (Charc 'q'),Comb ConsCall ("Prelude",":") [Lit (Charc 'u'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'I'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude",":") [Lit (Charc 'g'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'd'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'u'),Comb ConsCall ("Prelude",":") [Lit (Charc 'v'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Patty_Bouvier") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'P'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 't'),Comb ConsCall ("Prelude",":") [Lit (Charc 't'),Comb ConsCall ("Prelude",":") [Lit (Charc 'y'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'u'),Comb ConsCall ("Prelude",":") [Lit (Charc 'v'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Selma_Bouvier") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'u'),Comb ConsCall ("Prelude",":") [Lit (Charc 'v'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Marjorie_Jacqueline_Simpson") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'M'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'j'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'J'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'c'),Comb ConsCall ("Prelude",":") [Lit (Charc 'q'),Comb ConsCall ("Prelude",":") [Lit (Charc 'u'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'p'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Homer_Jay_Simpson") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'J'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'y'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'p'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Bartholomew_Jojo_Simpson") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 't'),Comb ConsCall ("Prelude",":") [Lit (Charc 'h'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'w'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'J'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'j'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'p'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Lisa_Marie_Simpson") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'L'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'M'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'p'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Maggie_Simpson") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'M'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'g'),Comb ConsCall ("Prelude",":") [Lit (Charc 'g'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'p'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Mona_Simpson") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'M'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'p'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Abraham_Simpson_II") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'A'),Comb ConsCall ("Prelude",":") [Lit (Charc 'b'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'h'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'p'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'I'),Comb ConsCall ("Prelude",":") [Lit (Charc 'I'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Herbert_Herb_Powell") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'b'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 't'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'b'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'P'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'w'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]]),Branch (Pattern ("simpsontree","Abbey_Simpson") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'A'),Comb ConsCall ("Prelude",":") [Lit (Charc 'b'),Comb ConsCall ("Prelude",":") [Lit (Charc 'b'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'y'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'S'),Comb ConsCall ("Prelude",":") [Lit (Charc 'i'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'p'),Comb ConsCall ("Prelude",":") [Lit (Charc 's'),Comb ConsCall ("Prelude",":") [Lit (Charc 'o'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]])])),Func ("simpsontree","_impl#showList#Prelude.Show#simpsontree.Person#") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Show#simpsontree.Person#") []])),Func ("simpsontree","_inst#Prelude.Show#simpsontree.Gender#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("simpsontree","Gender") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("simpsontree","_impl#show#Prelude.Show#simpsontree.Gender#") [],Comb (FuncPartCall 2) ("simpsontree","_impl#showsPrec#Prelude.Show#simpsontree.Gender#") [],Comb FuncCall ("simpsontree","_impl#showList#Prelude.Show#simpsontree.Gender#") []])])),Func ("simpsontree","_impl#show#Prelude.Show#simpsontree.Gender#") 0 Public (FuncType (TCons ("simpsontree","Gender") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Show#simpsontree.Gender#") []])),Func ("simpsontree","_impl#showsPrec#Prelude.Show#simpsontree.Gender#") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("simpsontree","Gender") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Male") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'M'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude","[]") []]]]]]),Branch (Pattern ("simpsontree","Female") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude","[]") []]]]]]]])])),Func ("simpsontree","_impl#showList#Prelude.Show#simpsontree.Gender#") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Gender") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Show#simpsontree.Gender#") []])),Func ("simpsontree","_inst#Prelude.Read#simpsontree.Gender#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Read") [TCons ("simpsontree","Gender") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Read") [Comb (FuncPartCall 2) ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#") [],Comb FuncCall ("simpsontree","_impl#readList#Prelude.Read#simpsontree.Gender#") []])])),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [1,2] (Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","readParen") [Comb ConsCall ("Prelude","False") [],Comb (FuncPartCall 1) ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda1") []],Var 2],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","readParen") [Comb ConsCall ("Prelude","False") [],Comb (FuncPartCall 1) ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda6") []],Var 2]])),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda1") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda1._#lambda4") [],Comb ConsCall ("Prelude","[]") [],Comb FuncCall ("Prelude","lex") [Var 1]])),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda1._#lambda4") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("Prelude","(,)") [3,4]) (Case Rigid (Comb FuncCall ("Prelude","eqString") [Var 3,Comb ConsCall ("Prelude",":") [Lit (Charc 'M'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude","[]") []]]]]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Male") [],Var 4],Var 2]),Branch (Pattern ("Prelude","False") []) (Var 2)])])),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda6") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda6._#lambda9") [],Comb ConsCall ("Prelude","[]") [],Comb FuncCall ("Prelude","lex") [Var 1]])),Func ("simpsontree","_impl#readsPrec#Prelude.Read#simpsontree.Gender#._#lambda6._#lambda9") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Gender") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("Prelude","(,)") [3,4]) (Case Rigid (Comb FuncCall ("Prelude","eqString") [Var 3,Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'm'),Comb ConsCall ("Prelude",":") [Lit (Charc 'a'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude","[]") []]]]]]]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Female") [],Var 4],Var 2]),Branch (Pattern ("Prelude","False") []) (Var 2)])])),Func ("simpsontree","_impl#readList#Prelude.Read#simpsontree.Gender#") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("simpsontree","Gender") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Comb FuncCall ("Prelude","_def#readList#Prelude.Read") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Read#simpsontree.Gender#") []])),Func ("simpsontree","_inst#Prelude.Eq#simpsontree.Gender#") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("simpsontree","Gender") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("simpsontree","_impl#==#Prelude.Eq#simpsontree.Gender#") [],Comb FuncCall ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Gender#") []])])),Func ("simpsontree","_impl#==#Prelude.Eq#simpsontree.Gender#") 2 Public (FuncType (TCons ("simpsontree","Gender") []) (FuncType (TCons ("simpsontree","Gender") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("simpsontree","Male") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Male") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("simpsontree","Female") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("simpsontree","Female") []) (Case Flex (Var 2) [Branch (Pattern ("simpsontree","Male") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("simpsontree","Female") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Gender#") 0 Public (FuncType (TCons ("simpsontree","Gender") []) (FuncType (TCons ("simpsontree","Gender") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Gender#") []])),Func ("simpsontree","genderFacts") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Gender") []]]) (Rule [] (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Clancy_Bouvier") [],Comb ConsCall ("simpsontree","Male") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Jacqueline_Ingrid_Bouvier") [],Comb ConsCall ("simpsontree","Female") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Mona_Simpson") [],Comb ConsCall ("simpsontree","Female") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Abraham_Simpson_II") [],Comb ConsCall ("simpsontree","Male") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Patty_Bouvier") [],Comb ConsCall ("simpsontree","Female") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Selma_Bouvier") [],Comb ConsCall ("simpsontree","Female") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") [],Comb ConsCall ("simpsontree","Female") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Homer_Jay_Simpson") [],Comb ConsCall ("simpsontree","Male") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Herbert_Herb_Powell") [],Comb ConsCall ("simpsontree","Male") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Abbey_Simpson") [],Comb ConsCall ("simpsontree","Female") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Bartholomew_Jojo_Simpson") [],Comb ConsCall ("simpsontree","Male") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Lisa_Marie_Simpson") [],Comb ConsCall ("simpsontree","Female") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Maggie_Simpson") [],Comb ConsCall ("simpsontree","Female") []],Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]])),Func ("simpsontree","parentFacts") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Person") []]]) (Rule [] (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Clancy_Bouvier") [],Comb ConsCall ("simpsontree","Patty_Bouvier") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Clancy_Bouvier") [],Comb ConsCall ("simpsontree","Selma_Bouvier") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Clancy_Bouvier") [],Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Jacqueline_Ingrid_Bouvier") [],Comb ConsCall ("simpsontree","Patty_Bouvier") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Jacqueline_Ingrid_Bouvier") [],Comb ConsCall ("simpsontree","Selma_Bouvier") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Jacqueline_Ingrid_Bouvier") [],Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Mona_Simpson") [],Comb ConsCall ("simpsontree","Homer_Jay_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Abraham_Simpson_II") [],Comb ConsCall ("simpsontree","Homer_Jay_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") [],Comb ConsCall ("simpsontree","Bartholomew_Jojo_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Homer_Jay_Simpson") [],Comb ConsCall ("simpsontree","Bartholomew_Jojo_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") [],Comb ConsCall ("simpsontree","Lisa_Marie_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Homer_Jay_Simpson") [],Comb ConsCall ("simpsontree","Lisa_Marie_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") [],Comb ConsCall ("simpsontree","Maggie_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Homer_Jay_Simpson") [],Comb ConsCall ("simpsontree","Maggie_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Abraham_Simpson_II") [],Comb ConsCall ("simpsontree","Herbert_Herb_Powell") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Abraham_Simpson_II") [],Comb ConsCall ("simpsontree","Abbey_Simpson") []],Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]])),Func ("simpsontree","spouseFacts") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Person") []]]) (Rule [] (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Clancy_Bouvier") [],Comb ConsCall ("simpsontree","Jacqueline_Ingrid_Bouvier") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Homer_Jay_Simpson") [],Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("simpsontree","Abraham_Simpson_II") [],Comb ConsCall ("simpsontree","Mona_Simpson") []],Comb ConsCall ("Prelude","[]") []]]])),Func ("simpsontree","allPersons") 0 Public (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (Rule [] (Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Clancy_Bouvier") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Jacqueline_Ingrid_Bouvier") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Patty_Bouvier") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Selma_Bouvier") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Marjorie_Jacqueline_Simpson") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Homer_Jay_Simpson") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Bartholomew_Jojo_Simpson") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Lisa_Marie_Simpson") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Maggie_Simpson") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Mona_Simpson") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Abraham_Simpson_II") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Herbert_Herb_Powell") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("simpsontree","Abbey_Simpson") [],Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]])),Func ("simpsontree","parent") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Eq#(,)#0##1##") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") []],Comb ConsCall ("Prelude","(,)") [Var 1,Var 2]],Comb FuncCall ("simpsontree","parentFacts") []])),Func ("simpsontree","children") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Data.List","nub") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","children._#lambda11") [Var 1]],Comb FuncCall ("simpsontree","allPersons") []]])),Func ("simpsontree","children._#lambda11") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [1,2] (Case Rigid (Comb FuncCall ("simpsontree","parent") [Var 1,Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","female") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Maybe#0##") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Gender#") [],Comb FuncCall ("simpsontree","lookupGender") [Var 1],Comb ConsCall ("Prelude","Just") [Comb ConsCall ("simpsontree","Female") []]])),Func ("simpsontree","male") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Maybe#0##") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Gender#") [],Comb FuncCall ("simpsontree","lookupGender") [Var 1],Comb ConsCall ("Prelude","Just") [Comb ConsCall ("simpsontree","Male") []]])),Func ("simpsontree","mother") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("simpsontree","parent") [Var 1,Var 2],Comb FuncCall ("simpsontree","female") [Var 1]])),Func ("simpsontree","father") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("simpsontree","parent") [Var 1,Var 2],Comb FuncCall ("simpsontree","male") [Var 1]])),Func ("simpsontree","sibling") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Person#") [],Var 1],Var 2],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","or") [],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("simpsontree","sibling._#lambda12") [Var 1,Var 2],Comb FuncCall ("simpsontree","allPersons") []]]])),Func ("simpsontree","sibling._#lambda12") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("simpsontree","parent") [Var 3,Var 1],Comb FuncCall ("simpsontree","parent") [Var 3,Var 2]])),Func ("simpsontree","siblingsInLaw") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Person#") [],Var 1],Var 2],Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","or") [],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("simpsontree","siblingsInLaw._#lambda13") [Var 1,Var 2],Comb FuncCall ("simpsontree","allPersons") []]],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","or") [],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("simpsontree","siblingsInLaw._#lambda14") [Var 1,Var 2],Comb FuncCall ("simpsontree","allPersons") []]]]])),Func ("simpsontree","siblingsInLaw._#lambda13") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("simpsontree","spouse") [Var 1,Var 3],Comb FuncCall ("simpsontree","sibling") [Var 3,Var 2]])),Func ("simpsontree","siblingsInLaw._#lambda14") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("simpsontree","sibling") [Var 1,Var 3],Comb FuncCall ("simpsontree","spouse") [Var 3,Var 2]])),Func ("simpsontree","stepSibling") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Person#") [],Var 1],Var 2],Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","not") [Comb FuncCall ("simpsontree","sibling") [Var 1,Var 2]],Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","or") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","stepSibling._#lambda15") [Var 1,Var 2]],Comb FuncCall ("simpsontree","allPersons") []]],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","or") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","stepSibling._#lambda17") [Var 1,Var 2]],Comb FuncCall ("simpsontree","allPersons") []]]]]])),Func ("simpsontree","stepSibling._#lambda15") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("Prelude","Bool") []])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("simpsontree","stepSibling._#lambda15._#lambda16") [Var 3,Var 1,Var 2],Comb FuncCall ("simpsontree","allPersons") []])),Func ("simpsontree","stepSibling._#lambda15._#lambda16") 4 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("simpsontree","parent") [Var 1,Var 2],Comb FuncCall ("Prelude","&&") [Comb FuncCall ("simpsontree","spouse") [Var 1,Var 4],Comb FuncCall ("simpsontree","parent") [Var 4,Var 3]]])),Func ("simpsontree","stepSibling._#lambda17") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("Prelude","Bool") []])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("simpsontree","stepSibling._#lambda17._#lambda18") [Var 3,Var 1,Var 2],Comb FuncCall ("simpsontree","allPersons") []])),Func ("simpsontree","stepSibling._#lambda17._#lambda18") 4 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("simpsontree","parent") [Var 1,Var 3],Comb FuncCall ("Prelude","&&") [Comb FuncCall ("simpsontree","spouse") [Var 1,Var 4],Comb FuncCall ("simpsontree","parent") [Var 4,Var 2]]])),Func ("simpsontree","halfSibling") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("simpsontree","_impl#/=#Prelude.Eq#simpsontree.Person#") [],Var 1],Var 2],Let [(3,Comb FuncCall ("simpsontree","parentsOf") [Var 1]),(4,Comb FuncCall ("simpsontree","parentsOf") [Var 2]),(5,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","halfSibling._#lambda19") [Var 4]],Var 3])] (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int#") [Comb FuncCall ("Prelude","length") [Var 5],Lit (Intc 1)])])),Func ("simpsontree","halfSibling._#lambda19") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [1,2] (Case Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Var 2],Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","grandparent") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Free [3] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("simpsontree","parent") [Var 1,Var 3],Comb FuncCall ("simpsontree","parent") [Var 3,Var 2]]))),Func ("simpsontree","spouse") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Eq#(,)#0##1##") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") []],Comb ConsCall ("Prelude","(,)") [Var 1,Var 2]],Comb FuncCall ("simpsontree","spouseFacts") []],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Eq#(,)#0##1##") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") []],Comb ConsCall ("Prelude","(,)") [Var 2,Var 1]],Comb FuncCall ("simpsontree","spouseFacts") []]])),Func ("simpsontree","ancestor") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Rigid (Comb FuncCall ("simpsontree","parent") [Var 1,Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","or") [],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("simpsontree","ancestor._#lambda20") [Var 2],Comb FuncCall ("Data.List","nub") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb FuncCall ("simpsontree","children") [Var 1]]]])])),Func ("simpsontree","ancestor._#lambda20") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("simpsontree","ancestor") [Var 2,Var 1])),Func ("simpsontree","aunt_or_uncle") 2 Public (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Free [3] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("simpsontree","parent") [Var 3,Var 2],Comb FuncCall ("simpsontree","sibling") [Var 1,Var 3]]))),Func ("simpsontree","lookupGender") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","Maybe") [TCons ("simpsontree","Gender") []])) (Rule [1] (Comb FuncCall ("Prelude","lookup") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Var 1,Comb FuncCall ("simpsontree","genderFacts") []])),Func ("simpsontree","parentsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","parentsOf._#lambda21") [Var 1]],Comb FuncCall ("simpsontree","allPersons") []])),Func ("simpsontree","parentsOf._#lambda21") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [1,2] (Case Rigid (Comb FuncCall ("simpsontree","parent") [Var 2,Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","spousesOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Data.List","nub") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("simpsontree","spousesOf._#lambda24") [Var 1],Comb ConsCall ("Prelude","[]") [],Comb FuncCall ("simpsontree","spouseFacts") []],Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("simpsontree","spousesOf._#lambda28") [Var 1],Comb ConsCall ("Prelude","[]") [],Comb FuncCall ("simpsontree","spouseFacts") []]]])),Func ("simpsontree","spousesOf._#lambda24") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Person") []]) (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])))) (Rule [1,2,3] (Case Rigid (Var 2) [Branch (Pattern ("Prelude","(,)") [4,5]) (Comb FuncCall ("Prelude","++") [Case Rigid (Comb FuncCall ("simpsontree","_impl#==#Prelude.Eq#simpsontree.Person#") [Var 4,Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 5,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])],Var 3])])),Func ("simpsontree","spousesOf._#lambda28") 3 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("Prelude","(,)") [TCons ("simpsontree","Person") [],TCons ("simpsontree","Person") []]) (FuncType (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])))) (Rule [1,2,3] (Case Rigid (Var 2) [Branch (Pattern ("Prelude","(,)") [4,5]) (Comb FuncCall ("Prelude","++") [Case Rigid (Comb FuncCall ("simpsontree","_impl#==#Prelude.Eq#simpsontree.Person#") [Var 5,Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 4,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])],Var 3])])),Func ("simpsontree","mothersOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","mothersOf._#lambda30") []],Comb FuncCall ("simpsontree","parentsOf") [Var 1]])),Func ("simpsontree","mothersOf._#lambda30") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Case Rigid (Comb FuncCall ("simpsontree","female") [Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","fathersOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","fathersOf._#lambda31") []],Comb FuncCall ("simpsontree","parentsOf") [Var 1]])),Func ("simpsontree","fathersOf._#lambda31") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Case Rigid (Comb FuncCall ("simpsontree","male") [Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","siblingsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","siblingsOf._#lambda32") [Var 1]],Comb FuncCall ("simpsontree","allPersons") []])),Func ("simpsontree","siblingsOf._#lambda32") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [1,2] (Case Rigid (Comb FuncCall ("simpsontree","sibling") [Var 1,Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","siblingsInLawOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","siblingsInLawOf._#lambda33") [Var 1]],Comb FuncCall ("simpsontree","allPersons") []])),Func ("simpsontree","siblingsInLawOf._#lambda33") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [1,2] (Case Rigid (Comb FuncCall ("simpsontree","siblingsInLaw") [Var 1,Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","stepSiblingsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","stepSiblingsOf._#lambda34") [Var 1]],Comb FuncCall ("simpsontree","allPersons") []])),Func ("simpsontree","stepSiblingsOf._#lambda34") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [1,2] (Case Rigid (Comb FuncCall ("simpsontree","stepSibling") [Var 1,Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","halfSiblingsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Data.List","nub") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","halfSiblingsOf._#lambda35") [Var 1]],Comb FuncCall ("simpsontree","allPersons") []]])),Func ("simpsontree","halfSiblingsOf._#lambda35") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [1,2] (Case Rigid (Comb FuncCall ("simpsontree","halfSibling") [Var 1,Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","grandparentsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","grandparentsOf._#lambda36") [Var 1]],Comb FuncCall ("simpsontree","allPersons") []])),Func ("simpsontree","grandparentsOf._#lambda36") 2 Private (FuncType (TCons ("simpsontree","Person") []) (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []]))) (Rule [1,2] (Case Rigid (Comb FuncCall ("simpsontree","grandparent") [Var 2,Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","auntsOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Data.List","nub") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","auntsOf._#lambda37") []],Comb FuncCall ("simpsontree","parentsOf") [Var 1]]])),Func ("simpsontree","auntsOf._#lambda37") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","auntsOf._#lambda37._#lambda38") []],Comb FuncCall ("simpsontree","siblingsOf") [Var 1]])),Func ("simpsontree","auntsOf._#lambda37._#lambda38") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Case Rigid (Comb FuncCall ("simpsontree","female") [Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])),Func ("simpsontree","unclesOf") 1 Public (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Data.List","nub") [Comb (FuncPartCall 1) ("simpsontree","_inst#Prelude.Eq#simpsontree.Person#") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","unclesOf._#lambda39") []],Comb FuncCall ("simpsontree","parentsOf") [Var 1]]])),Func ("simpsontree","unclesOf._#lambda39") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("simpsontree","unclesOf._#lambda39._#lambda40") []],Comb FuncCall ("simpsontree","siblingsOf") [Var 1]])),Func ("simpsontree","unclesOf._#lambda39._#lambda40") 1 Private (FuncType (TCons ("simpsontree","Person") []) (TCons ("Prelude","[]") [TCons ("simpsontree","Person") []])) (Rule [1] (Case Rigid (Comb FuncCall ("simpsontree","male") [Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])]))] []