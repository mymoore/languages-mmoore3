{- AbstractCurry 3.0 -}
CurryProg "simpsontree"
["Data.List"]
Nothing
 []
 []
 [CType ("simpsontree","Person") Public [] [CCons ("simpsontree","Clancy_Bouvier") Public [],CCons ("simpsontree","Jacqueline_Ingrid_Bouvier") Public [],CCons ("simpsontree","Patty_Bouvier") Public [],CCons ("simpsontree","Selma_Bouvier") Public [],CCons ("simpsontree","Marjorie_Jacqueline_Simpson") Public [],CCons ("simpsontree","Homer_Jay_Simpson") Public [],CCons ("simpsontree","Bartholomew_Jojo_Simpson") Public [],CCons ("simpsontree","Lisa_Marie_Simpson") Public [],CCons ("simpsontree","Maggie_Simpson") Public [],CCons ("simpsontree","Mona_Simpson") Public [],CCons ("simpsontree","Abraham_Simpson_II") Public [],CCons ("simpsontree","Herbert_Herb_Powell") Public [],CCons ("simpsontree","Abbey_Simpson") Public []] [("Prelude","Eq"),("Prelude","Show")],
  CType ("simpsontree","Gender") Public [] [CCons ("simpsontree","Male") Public [],CCons ("simpsontree","Female") Public []] [("Prelude","Show"),("Prelude","Read"),("Prelude","Eq")]]
 [CFunc ("simpsontree","genderFacts") 0 Public (CQualType (CContext []) (CTApply (CTCons ("Prelude","[]")) (CTApply (CTApply (CTCons ("Prelude","(,)")) (CTCons ("simpsontree","Person"))) (CTCons ("simpsontree","Gender"))))) [CRule [] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Clancy_Bouvier"))) (CSymbol ("simpsontree","Male")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Jacqueline_Ingrid_Bouvier"))) (CSymbol ("simpsontree","Female")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Mona_Simpson"))) (CSymbol ("simpsontree","Female")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Abraham_Simpson_II"))) (CSymbol ("simpsontree","Male")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Patty_Bouvier"))) (CSymbol ("simpsontree","Female")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Selma_Bouvier"))) (CSymbol ("simpsontree","Female")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Marjorie_Jacqueline_Simpson"))) (CSymbol ("simpsontree","Female")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Homer_Jay_Simpson"))) (CSymbol ("simpsontree","Male")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Herbert_Herb_Powell"))) (CSymbol ("simpsontree","Male")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Abbey_Simpson"))) (CSymbol ("simpsontree","Female")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Bartholomew_Jojo_Simpson"))) (CSymbol ("simpsontree","Male")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Lisa_Marie_Simpson"))) (CSymbol ("simpsontree","Female")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Maggie_Simpson"))) (CSymbol ("simpsontree","Female")))) (CSymbol ("Prelude","[]"))))))))))))))) [])],
  CFunc ("simpsontree","parentFacts") 0 Public (CQualType (CContext []) (CTApply (CTCons ("Prelude","[]")) (CTApply (CTApply (CTCons ("Prelude","(,)")) (CTCons ("simpsontree","Person"))) (CTCons ("simpsontree","Person"))))) [CRule [] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Clancy_Bouvier"))) (CSymbol ("simpsontree","Patty_Bouvier")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Clancy_Bouvier"))) (CSymbol ("simpsontree","Selma_Bouvier")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Clancy_Bouvier"))) (CSymbol ("simpsontree","Marjorie_Jacqueline_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Jacqueline_Ingrid_Bouvier"))) (CSymbol ("simpsontree","Patty_Bouvier")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Jacqueline_Ingrid_Bouvier"))) (CSymbol ("simpsontree","Selma_Bouvier")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Jacqueline_Ingrid_Bouvier"))) (CSymbol ("simpsontree","Marjorie_Jacqueline_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Mona_Simpson"))) (CSymbol ("simpsontree","Homer_Jay_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Abraham_Simpson_II"))) (CSymbol ("simpsontree","Homer_Jay_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Marjorie_Jacqueline_Simpson"))) (CSymbol ("simpsontree","Bartholomew_Jojo_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Homer_Jay_Simpson"))) (CSymbol ("simpsontree","Bartholomew_Jojo_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Marjorie_Jacqueline_Simpson"))) (CSymbol ("simpsontree","Lisa_Marie_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Homer_Jay_Simpson"))) (CSymbol ("simpsontree","Lisa_Marie_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Marjorie_Jacqueline_Simpson"))) (CSymbol ("simpsontree","Maggie_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Homer_Jay_Simpson"))) (CSymbol ("simpsontree","Maggie_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Abraham_Simpson_II"))) (CSymbol ("simpsontree","Herbert_Herb_Powell")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Abraham_Simpson_II"))) (CSymbol ("simpsontree","Abbey_Simpson")))) (CSymbol ("Prelude","[]")))))))))))))))))) [])],
  CFunc ("simpsontree","spouseFacts") 0 Public (CQualType (CContext []) (CTApply (CTCons ("Prelude","[]")) (CTApply (CTApply (CTCons ("Prelude","(,)")) (CTCons ("simpsontree","Person"))) (CTCons ("simpsontree","Person"))))) [CRule [] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Clancy_Bouvier"))) (CSymbol ("simpsontree","Jacqueline_Ingrid_Bouvier")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Homer_Jay_Simpson"))) (CSymbol ("simpsontree","Marjorie_Jacqueline_Simpson")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CSymbol ("simpsontree","Abraham_Simpson_II"))) (CSymbol ("simpsontree","Mona_Simpson")))) (CSymbol ("Prelude","[]"))))) [])],
  CFunc ("simpsontree","allPersons") 0 Public (CQualType (CContext []) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person")))) [CRule [] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Clancy_Bouvier"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Jacqueline_Ingrid_Bouvier"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Patty_Bouvier"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Selma_Bouvier"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Marjorie_Jacqueline_Simpson"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Homer_Jay_Simpson"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Bartholomew_Jojo_Simpson"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Lisa_Marie_Simpson"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Maggie_Simpson"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Mona_Simpson"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Abraham_Simpson_II"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Herbert_Herb_Powell"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("simpsontree","Abbey_Simpson"))) (CSymbol ("Prelude","[]"))))))))))))))) [])],
  CFunc ("simpsontree","children") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"p")] (CSimpleRhs (CApply (CSymbol ("Data.List","nub")) (CListComp (CVar (1,"c")) [CSPat (CPVar (1,"c")) (CSymbol ("simpsontree","allPersons")),CSExpr (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (0,"p"))) (CVar (1,"c")))])) [])],
  CFunc ("simpsontree","female") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool")))) [CRule [CPVar (0,"p")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","==")) (CApply (CSymbol ("simpsontree","lookupGender")) (CVar (0,"p")))) (CApply (CSymbol ("Prelude","Just")) (CSymbol ("simpsontree","Female")))) [])],
  CFunc ("simpsontree","male") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool")))) [CRule [CPVar (0,"p")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","==")) (CApply (CSymbol ("simpsontree","lookupGender")) (CVar (0,"p")))) (CApply (CSymbol ("Prelude","Just")) (CSymbol ("simpsontree","Male")))) [])],
  CFunc ("simpsontree","parent") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"p"),CPVar (1,"c")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","elem")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CVar (0,"p"))) (CVar (1,"c")))) (CSymbol ("simpsontree","parentFacts"))) [])],
  CFunc ("simpsontree","mother") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"m"),CPVar (1,"c")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&")) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (0,"m"))) (CVar (1,"c")))) (CApply (CSymbol ("simpsontree","female")) (CVar (0,"m")))) [])],
  CFunc ("simpsontree","father") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"f"),CPVar (1,"c")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&")) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (0,"f"))) (CVar (1,"c")))) (CApply (CSymbol ("simpsontree","male")) (CVar (0,"f")))) [])],
  CFunc ("simpsontree","sibling") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"x"),CPVar (1,"y")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("Prelude","/=")) (CVar (0,"x"))) (CVar (1,"y")))) (CApply (CSymbol ("Prelude","or")) (CListComp (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (2,"p"))) (CVar (0,"x")))) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (2,"p"))) (CVar (1,"y")))) [CSPat (CPVar (2,"p")) (CSymbol ("simpsontree","allPersons"))]))) [])],
  CFunc ("simpsontree","siblingsInLaw") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"x"),CPVar (1,"y")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("Prelude","/=")) (CVar (0,"x"))) (CVar (1,"y")))) (CApply (CApply (CSymbol ("Prelude","||")) (CApply (CSymbol ("Prelude","or")) (CListComp (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("simpsontree","spouse")) (CVar (0,"x"))) (CVar (2,"s")))) (CApply (CApply (CSymbol ("simpsontree","sibling")) (CVar (2,"s"))) (CVar (1,"y")))) [CSPat (CPVar (2,"s")) (CSymbol ("simpsontree","allPersons"))]))) (CApply (CSymbol ("Prelude","or")) (CListComp (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("simpsontree","sibling")) (CVar (0,"x"))) (CVar (3,"s")))) (CApply (CApply (CSymbol ("simpsontree","spouse")) (CVar (3,"s"))) (CVar (1,"y")))) [CSPat (CPVar (3,"s")) (CSymbol ("simpsontree","allPersons"))])))) [])],
  CFunc ("simpsontree","stepSibling") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"x"),CPVar (1,"y")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("Prelude","/=")) (CVar (0,"x"))) (CVar (1,"y")))) (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CSymbol ("Prelude","not")) (CApply (CApply (CSymbol ("simpsontree","sibling")) (CVar (0,"x"))) (CVar (1,"y"))))) (CApply (CApply (CSymbol ("Prelude","||")) (CApply (CSymbol ("Prelude","or")) (CListComp (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (2,"p"))) (CVar (0,"x")))) (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("simpsontree","spouse")) (CVar (2,"p"))) (CVar (3,"s")))) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (3,"s"))) (CVar (1,"y"))))) [CSPat (CPVar (2,"p")) (CSymbol ("simpsontree","allPersons")),CSPat (CPVar (3,"s")) (CSymbol ("simpsontree","allPersons"))]))) (CApply (CSymbol ("Prelude","or")) (CListComp (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (4,"p"))) (CVar (1,"y")))) (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("simpsontree","spouse")) (CVar (4,"p"))) (CVar (5,"s")))) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (5,"s"))) (CVar (0,"x"))))) [CSPat (CPVar (4,"p")) (CSymbol ("simpsontree","allPersons")),CSPat (CPVar (5,"s")) (CSymbol ("simpsontree","allPersons"))]))))) [])],
  CFunc ("simpsontree","halfSibling") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"x"),CPVar (1,"y")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("Prelude","/=")) (CVar (0,"x"))) (CVar (1,"y")))) (CLetDecl [CLocalPat (CPVar (2,"px")) (CSimpleRhs (CApply (CSymbol ("simpsontree","parentsOf")) (CVar (0,"x"))) []),CLocalPat (CPVar (3,"py")) (CSimpleRhs (CApply (CSymbol ("simpsontree","parentsOf")) (CVar (1,"y"))) []),CLocalPat (CPVar (4,"common")) (CSimpleRhs (CListComp (CVar (5,"p")) [CSPat (CPVar (5,"p")) (CVar (2,"px")),CSExpr (CApply (CApply (CSymbol ("Prelude","elem")) (CVar (5,"p"))) (CVar (3,"py")))]) [])] (CApply (CApply (CSymbol ("Prelude","==")) (CApply (CSymbol ("Prelude","length")) (CVar (4,"common")))) (CLit (CIntc 1))))) [])],
  CFunc ("simpsontree","grandparent") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"gp"),CPVar (1,"gc")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&")) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (0,"gp"))) (CVar (2,"p")))) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (2,"p"))) (CVar (1,"gc")))) [CLocalVars [(2,"p")]])],
  CFunc ("simpsontree","spouse") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"x"),CPVar (1,"y")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","||")) (CApply (CApply (CSymbol ("Prelude","elem")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CVar (0,"x"))) (CVar (1,"y")))) (CSymbol ("simpsontree","spouseFacts")))) (CApply (CApply (CSymbol ("Prelude","elem")) (CApply (CApply (CSymbol ("Prelude","(,)")) (CVar (1,"y"))) (CVar (0,"x")))) (CSymbol ("simpsontree","spouseFacts")))) [])],
  CFunc ("simpsontree","ancestor") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"x"),CPVar (1,"y")] (CSimpleRhs (CApply (CApply (CApply (CSymbol ("Prelude","ifThenElse")) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (0,"x"))) (CVar (1,"y")))) (CSymbol ("Prelude","True"))) (CApply (CSymbol ("Prelude","or")) (CListComp (CApply (CApply (CSymbol ("simpsontree","ancestor")) (CVar (2,"c"))) (CVar (1,"y"))) [CSPat (CPVar (2,"c")) (CApply (CSymbol ("Data.List","nub")) (CApply (CSymbol ("simpsontree","children")) (CVar (0,"x"))))]))) [])],
  CFunc ("simpsontree","aunt_or_uncle") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CFuncType (CTCons ("simpsontree","Person")) (CTCons ("Prelude","Bool"))))) [CRule [CPVar (0,"au"),CPVar (1,"n")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&")) (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (2,"p"))) (CVar (1,"n")))) (CApply (CApply (CSymbol ("simpsontree","sibling")) (CVar (0,"au"))) (CVar (2,"p")))) [CLocalVars [(2,"p")]])],
  CFunc ("simpsontree","lookupGender") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","Maybe")) (CTCons ("simpsontree","Gender"))))) [CRule [CPVar (0,"p")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","lookup")) (CVar (0,"p"))) (CSymbol ("simpsontree","genderFacts"))) [])],
  CFunc ("simpsontree","parentsOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CListComp (CVar (1,"p")) [CSPat (CPVar (1,"p")) (CSymbol ("simpsontree","allPersons")),CSExpr (CApply (CApply (CSymbol ("simpsontree","parent")) (CVar (1,"p"))) (CVar (0,"x")))]) [])],
  CFunc ("simpsontree","spousesOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CApply (CSymbol ("Data.List","nub")) (CApply (CApply (CSymbol ("Prelude","++")) (CListComp (CVar (2,"y")) [CSPat (CPComb ("Prelude","(,)") [CPVar (1,"a"),CPVar (2,"y")]) (CSymbol ("simpsontree","spouseFacts")),CSExpr (CApply (CApply (CSymbol ("Prelude","==")) (CVar (1,"a"))) (CVar (0,"x")))])) (CListComp (CVar (3,"y")) [CSPat (CPComb ("Prelude","(,)") [CPVar (3,"y"),CPVar (4,"a")]) (CSymbol ("simpsontree","spouseFacts")),CSExpr (CApply (CApply (CSymbol ("Prelude","==")) (CVar (4,"a"))) (CVar (0,"x")))]))) [])],
  CFunc ("simpsontree","mothersOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CListComp (CVar (1,"m")) [CSPat (CPVar (1,"m")) (CApply (CSymbol ("simpsontree","parentsOf")) (CVar (0,"x"))),CSExpr (CApply (CSymbol ("simpsontree","female")) (CVar (1,"m")))]) [])],
  CFunc ("simpsontree","fathersOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CListComp (CVar (1,"f")) [CSPat (CPVar (1,"f")) (CApply (CSymbol ("simpsontree","parentsOf")) (CVar (0,"x"))),CSExpr (CApply (CSymbol ("simpsontree","male")) (CVar (1,"f")))]) [])],
  CFunc ("simpsontree","siblingsOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CListComp (CVar (1,"y")) [CSPat (CPVar (1,"y")) (CSymbol ("simpsontree","allPersons")),CSExpr (CApply (CApply (CSymbol ("simpsontree","sibling")) (CVar (0,"x"))) (CVar (1,"y")))]) [])],
  CFunc ("simpsontree","siblingsInLawOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CListComp (CVar (1,"y")) [CSPat (CPVar (1,"y")) (CSymbol ("simpsontree","allPersons")),CSExpr (CApply (CApply (CSymbol ("simpsontree","siblingsInLaw")) (CVar (0,"x"))) (CVar (1,"y")))]) [])],
  CFunc ("simpsontree","stepSiblingsOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CListComp (CVar (1,"y")) [CSPat (CPVar (1,"y")) (CSymbol ("simpsontree","allPersons")),CSExpr (CApply (CApply (CSymbol ("simpsontree","stepSibling")) (CVar (0,"x"))) (CVar (1,"y")))]) [])],
  CFunc ("simpsontree","halfSiblingsOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CApply (CSymbol ("Data.List","nub")) (CListComp (CVar (1,"y")) [CSPat (CPVar (1,"y")) (CSymbol ("simpsontree","allPersons")),CSExpr (CApply (CApply (CSymbol ("simpsontree","halfSibling")) (CVar (0,"x"))) (CVar (1,"y")))])) [])],
  CFunc ("simpsontree","grandparentsOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CApply (CSymbol ("Data.List","nub")) (CListComp (CVar (2,"gp")) [CSPat (CPVar (1,"p")) (CApply (CSymbol ("simpsontree","parentsOf")) (CVar (0,"x"))),CSPat (CPVar (2,"gp")) (CApply (CSymbol ("simpsontree","parentsOf")) (CVar (1,"p")))])) [])],
  CFunc ("simpsontree","auntsOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CApply (CSymbol ("Data.List","nub")) (CListComp (CVar (2,"s")) [CSPat (CPVar (1,"p")) (CApply (CSymbol ("simpsontree","parentsOf")) (CVar (0,"x"))),CSPat (CPVar (2,"s")) (CApply (CSymbol ("simpsontree","siblingsOf")) (CVar (1,"p"))),CSExpr (CApply (CSymbol ("simpsontree","female")) (CVar (2,"s")))])) [])],
  CFunc ("simpsontree","unclesOf") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("simpsontree","Person")) (CTApply (CTCons ("Prelude","[]")) (CTCons ("simpsontree","Person"))))) [CRule [CPVar (0,"x")] (CSimpleRhs (CApply (CSymbol ("Data.List","nub")) (CListComp (CVar (2,"s")) [CSPat (CPVar (1,"p")) (CApply (CSymbol ("simpsontree","parentsOf")) (CVar (0,"x"))),CSPat (CPVar (2,"s")) (CApply (CSymbol ("simpsontree","siblingsOf")) (CVar (1,"p"))),CSExpr (CApply (CSymbol ("simpsontree","male")) (CVar (2,"s")))])) [])]]
 []
